## Free as in Freedom

### For Want Of A Printer
### 2001: A Hacher's Odyssey
### A Portrait of the Hacker as a Young Man
### Impeach God
### Puddle of Freedom
### The Emacs Commune
### A Stark Moral Choice
### St. Ignucius
### The GNU General Public License
### GNU/Linux
### Open Source
### A brief Journey Through Hacker Hell
### Continuing the Fight
Epilogue from Sam Williams: Crushing Loneliness
Appendix A - Hack, Hackers, and Hacking
Appendix B - GNU Free Documentation License

##--------------------------------------------
### For Want Of A Printer
- if a program or software fix was good enough to solve your problems, it was good enough to solve somebody else's problems. Why not share it out of a simple desire for good karma?


### 2001: A Hacher's Odyssey
- the viral GPL: spreads itself to every software program it touches.
- GCC, GNU Emacs, GNU Debugger
- Richard Stallman's Speech
> I do fre software, Open source is different movement. ... like sharing recipies




### A PORTRAIT OF THE HACKER AS A YOUNG MAN
- "It made him so angry." The anger eventually drove her son to focus on math and science all the more.
- "I was weird. After a certain age, the only friends I had were teachers." Stallman was not ashamed of his weird characteristics, distinguishing them fro social ineptness that he did regard as a failing. However, both contributed together to his social exclusion.
- A report: "The Geek Syndrome"
- "My father had a horrible temper. He never screamed, but he always found a way to criticize you in a cold, designed-to-crush way."
- Almost as if on cue, the corners of Stallman's mouth slowly turned upward into a self-satisfied smill. "It was his silent way of saying, 'That's right. You haven't got rid of me yet.'"

### IMPEACH GOD
- "I didn't like the counter culture much, I didn't like the music. I didn't like the drugs. I was scared of the drugs. I especially didn't like the anti-intellectualism, and I didn't like the prejudice against technology. After all, I loved a computer. And I didn't like the mindless anti-Americanism that I often encountered.
- "It's the same reason I never liked chess, whenever I'd play, I would become so consumed by the fear of making a single mistake and losing that I would start making stupid mistakes very early in the game. The fear became a self-fulfilling prophecy." He avoided the problem by not playing chess.
- Members of the tight-knit group called themselves "hachers". Over time, they extended the "hacker" description to Stallman as well.
- Stallman might stay up all morning hacking, or might sleep Saturday morning on a couch. On waking he would hack some more, have another Chinese dinner, then go back to Harvard. These Chinese dinners were not only delicious; they also provided sustenance lacking in the Harvard dining halls, where on average only one meal a day included anything he could stomach.
- Null-string campaign: Email from Richard Stallman:
> I see you choose the password "starfish". I suggest that you switch to the password "carriage return", which is what I use. It's easier to type, and also opposes the idea of passwords and security.





### PUDDLE OF FREEDOM
- "The Saint of Free Software", "Rasputinlike", "a disciple seeing Jesus."
- "That's why I ask that when you refer to the operating system, please call it by its proper name, GNU/Linux."
- "Giving the Linus Torvald Award to the Free Software Foundation is a bit like giving the Han Solo Award to the Rebel Alliance."
- Stallman has a tendency to block out all external stimuli while working. Watching his eyes lock onto the screen and his fingers dance, one quickly gets the sense of two old friends locked in deep conversation.
- In India many people are interested in free software, because they see it as a way to build their computing infrasructure without spending a lot of money. In China, the concept has been much slower to catch on. Comparing the software to free speech is harder to do when you don't have any free speech. Still, the level of interest in free software during my last visit was profound."

### EMACS COMMUNE
- AI Lab: "It was a bit like the garden of Eden, it hadn't occurred to us to cooperate."
- "I may have done a little bit more living at the lab than most peopel, because every year or two for some reason or other I'd have no apartment and I would speand a few months living at the lab. And I've always found it very comfortable, as well as nice and cool in the summer. But it was not at all uncommon to find people falling asleep at the lab, again because of their enthusiasm; you stay up as long as you possibly can hacking, because you just don't want to stop. And when you're completely exhaused, you climb over to the nearest soft horizontal surface. A very informal atmosphere."
- Hacker life, however, was not without tragedy: no dorm, no dancing, no dates, then "I felt basically that I'd lost all my energy"
- "A lot of people were angry with me, saying I was trying to hold them hostage or blackmail them..."
- Over time, Emacs became a sales tool for the hacker ethic.
- The programming session lasted 10 hours. Throughout that entire time, Steele says, neither he nor Stallman took a break or made any small talk. By the end of the session, they had managed to hack the pretty print source code to just under 100 lines. "My fingers wer on the keyboard the whole time," Steele recalls, "but it felt like both of our ideas were flowing onto the screen. He told me what to type, and I typed it."
- Looking back, Steele says he found the Stallman mind-meld both exhilarating and scary at the same time. "My first thought afterward was that it was a great experience, very intense, and that I never wanted to do it again in
y life."



### A STARK MORAL CHOICE
- An unusual message from rms: 
> Strating this Thanksgiving I am going to write a complete Unix-compatible software system called GNU (for Gnu's Not Unix), and give it away free to everyone who can use it. Contributions of time, money, programs and equipment are greatly needed.
- To an experienced Unix developer, the message was a mixture of idealism and hubris. 
- The GNU system, the author predicted, would carry all the usual applications, a compiler, "and a few other things." It would also contain many enticing features that other Unix systems didn't yet offer: a graphic user interface based on the Lisp programming language, a crash-proof file system, and networking protocols built according to MIT's internal networking system.
- "GNU will be able to run Unix programs, but will not be identical to Unix, we will make all improvements that are convenient, based on our experience ith other operating systems."
- "Who am I?"
> I am Richard Stallman, inventor of the original muchimitated EMACS editor, now at the Artificial Intelligence Lab at MIT. I have worked extensively on compilers, editors, debuggers, command interpreters, the Incompatible Timesharing System and the Lisp Machine operating system. I pioneered terminal-independent one crashproof file system and two window systems for Lisp machines.
- Created by artificial-intelligence researcher during the late 1950s, Lisp is an elegant language, well-suited for writing complex programs to operate on data with irregular structure.
- Wheel Privilege
- MIT continued giving LMI direct access to the changes. "I was going to punish Symbolics if it was the last thing I did," Stallman says. Such statements are revealing. Not only do they shed light on Stallman's nonpacifist nature, they also refected the intense level of emotion triggered by the conflict.
- The level of despair owed much to what Stallman viewed as the "destruction" of his "home" - i.e., the demise of the AI Lab's closeknit hacher subculture. 
- One of the most notorious of these programmers was Bill Gates, a Harvard dropout two years Stallman's junior. Although Stallman didn't know it at the time, seven years before sending out his message to thenet.unix-wizards newsgroup. _Open Letter to Hobbyists_ had excoriated the notion of communal software development. 
- For a man who had spent the entire 1960s as a throwback to the 1950s, Stallman didn't mind living out of step with his peers. As a programmer used to working with the best machines and the best software, however, Stallman faced what he could only describe as a "stark moral choice": either swallow his ethical objection for "proprietary" software - the term Stallman and his fellow hackers used to describe any software that carried copyright terms or an end-user license that restricted coping and modification - or dedicate his life to building an alternate, nonproprietary system of software programs. 
- After his two-year battle with Symbolics, Stallman felt confident enough to undertake the latter option. "I suppose I could have stopped working on computers altogether," Stallman says, "I had no special skills, but I'm sure I could have become a waiter. Not at a fancy restaurant, probably, but I could've been a waiter somewhere."
- "The commusity reaction was pretty much uniform," recalls Rich Morin, leader of a Unix user group at the time. "People said, 'Oh, that's a good idea. Show us your code. Show us it can be done.'"
- Aware that the job was enormous, Stallman decided to try to reuse existing free programs and tools that could be converted into GNU programs and tools. One of the first candidates was a compiler named VUCK, which converted programs written in the popular C programming language into machine-runnable code. 
- "He responded derisively, stating that the university was free but the compiler was not," recalls Stallman. He had not only refused to hely - he suggested Stallman drop his plan to develop GNU, and instead write some add-ons to boost sales of VUCK, in return for a share of the profits. "I therefore decides that my first program for the GNU Project would be a multi-language, multi-plantform compiler." ... Stallman eventually did this, producing the GNU C Compiler or GCC. But it was not clear in 1984 what to do about the compiler, so he decided to let those plans gel while turning his attention to other parts of GNU.
- In September of 1984, thus, Stallman began development of a GNU version of Emacs, the replacement for the program he had been supervising for a decade. Within the Unix community, the two native editor programs were vi, written by Sun Microsystems cofounder Bill Joy, and ed, written by Bell Labs scientist (and Unix cocreator) Ken Thompson. Both were useful and popular, but either offered the endlessly expandable nature of Emacs.
- "I want an Emacs, and I had a good opportunity to develop one."
- It would also force Stallman to sharpen the free software movement's political objectives. Following the release of GNU Emacs in 1985, Stallman issued _The GNU Manifesto_, an expansion of the original announcement posted in September, 1983. Stallman included within the document a lengthy section devoted to the many arguments used by commercial and academic programmers to justify the proliferation of proprietary software programs. 
- With the release of GNU Emacs, the GNU Project finally had code to show. It also had the burdens of any software-based enterprise. As more and more Unix developers began playing with the software, money, gifts, and requests for tapes began to pour in. To address the business side of the GNU Project, Stallman drafted a few of his colleagues and formed the Free Software Foundation (FSF), a nonprofit organization dedicated to speeding the GNU Project towards its goal. With Stallman as president and various friends and hacker allies as board members, the FSF helped provide a corporate face for the GNU Project.
- The Unix wizards who once regards Stallman as a noisy kook were now beginnig to see him as a software prophet or a software Cassandra, according as they felt hope or despair over escaping the problems he identified.


### ST. IGNUCIUS
- "Some people say to me, 'Why make such a fuss about getting credit for this system? After all, the important thing is the job is done, not whether you get recognition for it.' Well, this would be wise advice if it were true. But the job wasn't to build an operating system; the job is to spread freedom to the users of computers. And to da that we have to make it possible to do every thing with computers in freedom."







### THE GNU GENERAL PUBLIC LICENSE
### GNU/LINUX
### Open Source
### A brief Journey Through Hacker Hell
### Continuing the Fight
Epilogue from Sam Williams: Crushing Loneliness
Appendix A - Hack, Hackers, and Hacking
Appendix B - GNU Free Documentation License